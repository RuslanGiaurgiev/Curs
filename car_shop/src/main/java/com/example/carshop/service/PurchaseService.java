package com.example.carshop.service;

import com.example.carshop.model.Car;
import com.example.carshop.model.Purchase;
import com.example.carshop.model.User;
import com.example.carshop.repository.PurchaseRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.time.LocalDateTime;
import java.util.List;

@Service
public class PurchaseService {

    @Autowired
    private PurchaseRepository purchaseRepository;

    @Autowired
    private CarService carService;

    @Transactional
    public Purchase createPurchase(User user, Long carId) {
        System.out.println("üõí –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + user.getEmail() + ", –∞–≤—Ç–æ–º–æ–±–∏–ª—å: " + carId);

        Car car = carService.getCarById(carId);
        if (car == null) {
            System.out.println("‚ùå –ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω: " + carId);
            throw new RuntimeException("–ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }

        if (!car.isAvailable()) {
            System.out.println("‚ùå –ê–≤—Ç–æ–º–æ–±–∏–ª—å —É–∂–µ –ø—Ä–æ–¥–∞–Ω: " + carId);
            throw new RuntimeException("–ê–≤—Ç–æ–º–æ–±–∏–ª—å —É–∂–µ –ø—Ä–æ–¥–∞–Ω");
        }

        System.out.println("‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω: " + car.getBrand() + " " + car.getModel());

        Purchase purchase = new Purchase();
        purchase.setUser(user);
        purchase.setCar(car);
        purchase.setPurchaseDate(java.time.LocalDateTime.now());
        purchase.setTotalPrice(car.getPrice());
        purchase.setStatus("completed");

        // –ü–æ–º–µ—á–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π
        car.setAvailable(false);
        carService.saveCar(car);
        System.out.println("üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π: " + carId);

        Purchase savedPurchase = purchaseRepository.save(purchase);
        System.out.println("üíæ –ü–æ–∫—É–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î —Å ID: " + savedPurchase.getId());

        return savedPurchase;
    }

    public List<Purchase> getAllPurchases() {
        return purchaseRepository.findAll();
    }

    public List<Purchase> getPurchasesByUserId(Long userId) {
        return purchaseRepository.findByUserId(userId);
    }

    public List<Purchase> getPurchasesByUserEmail(String email) {
        return purchaseRepository.findByUserEmail(email);
    }

    public void deletePurchase(Long id) {
        purchaseRepository.deleteById(id);
    }
}